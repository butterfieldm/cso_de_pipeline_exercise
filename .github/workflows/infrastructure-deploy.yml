name: Infrastructure Deploy

on:
  push:
    branches:
      - main
    paths:
      - 'gcp-terraform/**'
      - 'functions/**'
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest
    env:
      PROJECT_ID: cso-deng-pipeline
      REGION: europe-west2
      BUCKET_NAME: cso-exercise-ingestion-raw
      DATAFLOW_TEMPLATE_PATH: gs://cso-exercise-ingestion-raw/templates/cso-dataflow-template.json

    steps:
      - uses: actions/checkout@v4

      - name: Authenticate to GCP
        uses: google-github-actions/auth@v2
        with:
          credentials_json: ${{ secrets.GCP_PROJECT_KEY }}

      - name: Package Cloud Function
        run: |
          cd functions
          zip -r ../gcp-terraform/function-source.zip .
    
      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.5.0

      - name: Terraform Init & Apply
        working-directory: ./gcp-terraform
        run: |
          terraform init
          terraform apply -auto-approve

      - name: Build & Push Flex Template Image
        run: |
          IMAGE_URI=us-central1-docker.pkg.dev/${{ env.PROJECT_ID }}/gcf-artifacts/dataflow-flex-template:latest
          gcloud config set project ${{ env.PROJECT_ID }}
          gcloud auth configure-docker us-central1-docker.pkg.dev --quiet
          docker build --no-cache -t $IMAGE_URI .
          docker push $IMAGE_URI
        
      - name: Create Flex Template JSON
        run: |
          gcloud dataflow flex-template build ${{ env.DATAFLOW_TEMPLATE_PATH }} \
            --image us-central1-docker.pkg.dev/${{ env.PROJECT_ID }}/gcf-artifacts/dataflow-flex-template:latest \
            --sdk-language "PYTHON" \
            --metadata-file metadata.json

      - name: Upload Function Code
        run: |
          gsutil cp gcp-terraform/function-source.zip gs://${{ env.BUCKET_NAME }}/function-source.zip
